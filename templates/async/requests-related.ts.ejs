<% const getFirstName = (str) => str.split('_')[0] %>
<% const getSecondName = (str) => str.split('_')[1] %>

import { useApp } from "@/hooks/use-app";
import { Delete, PaginationParams, PaginationResult } from "@/types";
import { <%= tableNameCase.pascal %>Type } from "@/types/models";
import { HttpMethod } from "@/types/http-method";
import { formatDataWithLocale } from "@hedhog/utils";

export function requests() {
  const { request } = useApp();

  const <%= tableNameCase.camel %>List = async (
    <%= getFirstName(tableName) %>Id: number,
    params: PaginationParams & { typeId?: number; <%= getSecondName(tableName) %>Id?: number }
  ) => {
    return request<PaginationResult<<%= tableNameCase.pascal %>Type>>({
      url: `/<%= getFirstName(tableName) %>/${<%= getFirstName(tableName) %>Id}/<%= getSecondName(tableName) %>`,
      params,
    }).then((res) => res.data);
  };

  const <%= tableNameCase.camel %>Create = async (<%= getFirstName(tableName) %>Id: number, data: <%= tableNameCase.pascal %>Type) => {
    return request<<%= tableNameCase.pascal %>Type>({
      url: `/<%= getFirstName(tableName) %>/${<%= getFirstName(tableName) %>Id}/<%= getSecondName(tableName) %>`,
      method: HttpMethod.POST,
      data: formatDataWithLocale(data),
    }).then((res) => res.data);
  };

  const <%= tableNameCase.camel %>Update = async (
    <%= getFirstName(tableName) %>Id: number,
    <%= getSecondName(tableName) %>Id: number,
    data: <%= tableNameCase.pascal %>Type
  ) => {
    return request<<%= tableNameCase.pascal %>Type>({
      url: `/<%= getFirstName(tableName) %>/${<%= getFirstName(tableName) %>Id}/<%= getSecondName(tableName) %>/${<%= getSecondName(tableName) %>Id}`,
      method: HttpMethod.PATCH,
      data: formatDataWithLocale(data),
    }).then((res) => res.data);
  };

  const <%= tableNameCase.camel %>Delete = async (<%= getFirstName(tableName) %>Id: number, ids: number[]) => {
    return request<Delete>({
      url: `/<%= getFirstName(tableName) %>/${<%= getFirstName(tableName) %>Id}/<%= getSecondName(tableName) %>`,
      method: HttpMethod.DELETE,
      data: { ids },
    }).then((res) => res.data);
  };

  return {
    <%= tableNameCase.camel %>Create,
    <%= tableNameCase.camel %>Update,
    <%= tableNameCase.camel %>Delete,
    <%= tableNameCase.camel %>List,
  };
}
