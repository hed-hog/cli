import { useApp } from '@/hooks/use-app'
import { Delete, PaginationParams, PaginationResult } from '@/types'
import { <%= tableNameCase.pascal %> } from '@/types/models'
import { HttpMethod } from '@/types/http-method'
<%- hasLocale ? "import { formatDataWithLocale } from '@hedhog/utils'" : "" %>	

export function requests() {
  const { request } = useApp()

  const <%= tableNameCase.camel %>List = async (params: PaginationParams) => {
    return request<PaginationResult<<%= tableNameCase.pascal %>>>(
      {
        url: '/<%= tableNameCase.kebab %>',
        params
      }
    ).then((res) => res.data)
  }

  const <%= tableNameCase.camel %>Get = async (id: number) => {
    return request<<%= tableNameCase.pascal %>>(
      {
        url: `/<%= tableNameCase.kebab %>/${id}`
      }
    ).then((res) => res.data)
  }

  const <%= tableNameCase.camel %>Create = async (params: { data: <%= tableNameCase.pascal %> }) => {
    const { data } = params
    return request<<%= tableNameCase.pascal %>>(
     { 
        url: '/<%= tableNameCase.kebab %>',
        method: HttpMethod.POST,
        data: <%= hasLocale ? 'formatDataWithLocale(data)' : 'data' %>
      }
    ).then((res) => res.data)
  }

  const <%= tableNameCase.camel %>Delete = async (ids: number[]) => {
    return request<Delete>(
      {
        url: '/<%= tableNameCase.kebab %>',
        data: { ids },
        method: HttpMethod.DELETE
      }
    ).then((res) => res.data)
  }

  const <%= tableNameCase.camel %>Update = async (params: {id: number; data: <%= tableNameCase.pascal %>}) => {
    const { id, data } = params
    return request<<%= tableNameCase.pascal %>>(
      {
        url: `/<%= tableNameCase.kebab %>/${id}`,
        method: HttpMethod.PATCH,
        data: <%= hasLocale ? 'formatDataWithLocale(data)' : 'data' %>
      }
    ).then((res) => res.data)
  }

  return {
    <%= tableNameCase.camel %>Create,
    <%= tableNameCase.camel %>Update,
    <%= tableNameCase.camel %>Delete,
    <%= tableNameCase.camel %>List,
    <%= tableNameCase.camel %>Get,
  }
}
