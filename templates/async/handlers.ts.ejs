<% const toPascalCase = (str) => str.replace(/(^\w|[-_]\w)/g, (match) => match.replace(/[-_]/, '').toUpperCase()) %>;
<% const toCamelCase = (str) => str.replace(/_([a-z])/g, (_, char) => char.toUpperCase()); %>
<% const toKebabCase = (str) => str.replace(/_/g, '-'); %>

import { useDefaultMutation } from '@/hooks/use-default-mutation'
import { useQuery } from '@tanstack/react-query'
import { requests } from './requests'

const scope = '<%= toKebabCase(tableName) %>'

export function use<%= toPascalCase(tableName) %>Create() {
  const { <%= toCamelCase(tableName) %>Create } = requests()
  return useDefaultMutation(scope, 'create', <%= toCamelCase(tableName) %>Create)
}

export function use<%= toPascalCase(tableName) %>Delete() {
  const { <%= toCamelCase(tableName) %>Delete } = requests()
  return useDefaultMutation(scope, 'delete', <%= toCamelCase(tableName) %>Delete)
}

export function use<%= toPascalCase(tableName) %>Update() {
  const { <%= toCamelCase(tableName) %>Update } = requests()
  return useDefaultMutation(scope, 'update', <%= toCamelCase(tableName) %>Update)
}

export function use<%= toPascalCase(tableName) %>Get(id: number) {
  const { <%= toCamelCase(tableName) %>Get } = requests()
  return useQuery({
    queryKey: [scope, 'get'],
    queryFn: () => <%= toCamelCase(tableName) %>Get(id),
  })
}